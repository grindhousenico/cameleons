body {
    background-color: #2F3848;
    font-family: 'Open Sans', sans-serif;
    width: 900px;
    margin: 0 auto;
}

/* typographies */
p {
    color: white;
}

a {
    color: yellowgreen;
}
h2 {
    color: #0099cc;
}

/* style du header */

h1 {
    color: white;
    font-style: italic;
    font-size: 40px;
    font-weight: bolder;
    background-color: #f05768;
    margin-top: -10px;
    margin-bottom: 10px;
    padding-top: 10px;
    padding-bottom: 20px;
    text-align: center;
    border-bottom: 3px solid lightgrey;
    border-radius: 0 0 10px 10px;
}

nav {
    display: flex;
    justify-content: space-between;
}

nav ul {
    display: flex;
    list-style: none;
    padding: 0;
}

nav a {
    font-weight: bold;
    text-decoration: none;
}

#main-nav li {
    margin-right: 1em;
}

#social-nav img {
    height: 1.5em;
    margin-left: 1em;
}

#presentation h2 {
    font-style: italic;
}

#highlight {
    /* parent de l'image/du h2 */
    position: relative;
}

#highlight h2 {
    position: absolute;
    top: 0;
    left: 0;
    background-color: #f05768;
    color: white;
    margin: 0;
    padding: 0.5em;
    text-transform: uppercase;
    font-size: 1.2em;
    z-index: 10;
}

#highlight img {
    max-width: 100%;
}

#gallery-container {
    display: flex;
    margin-top: 20px;
}

#gallery {
    width: 70%;
    padding-right: 50px;
    display: flex;
    flex-wrap: wrap;
}

/* #gallery img => toutes les images à n'importe quel niveau hiérarchique à l'intérieur de la gallerie */
/* #gallery > img => les images qui sont enfant direct de la gallerie */
#gallery img {
    width: 25%;
    padding-bottom: 10px;
    padding-right: 10px;
    /* permet d'utiliser le padding, sans pour autant modifier la taille d'origine de l'image (50% par exemple) et éviter d'ajouter cette padding en plus 
    Au lieu d'avoir width total = 50% + 5px + 5px 
    On va avoir : width : 50% ! content = taille de l'image = 50% - 5px - 5px */
    box-sizing: border-box;
}

/* Cette définition va me permettre de remplacer la classe first-cameleon */
#gallery > img:first-of-type {
    width: 50%;
}

#gallery>img:nth-child(even) {
    opacity: 0.5;
}

#gallery-top-four-images {
    width: 50%;
    display: flex;
    flex-wrap: wrap;
}

#gallery-top-four-images img {
    width: 50%; /* 25% de la taille totale */
}

aside {
    width: 30%;
}

#aside {
    background-color: #004488;
    box-sizing: border-box;
    padding: 24px;
    padding-top: 0;
}
aside h3 {
    color: #00ccff;
    text-transform: uppercase;
    border-bottom: 2px solid #00ccff;
    padding: 18px 0;
    line-height: 1.25;
}
aside p {
    color: yellowgreen;
    font-weight: bold;
    font-size: 14px;
    line-height: 1.5;
}

footer {
    padding: 20px;
    margin-top: 80px;
}

footer p {
    text-align: center;
    color: #60b9ce;
}

/* fioritures dans le projet */

/* On a envi d'agrandir nos caméléons au survol */
#gallery img {
    transition: 2s;
}

#gallery img:hover {
    transform: scale(1.4);
}

/* social icons */
#social-nav img {
    transition: 1s;
}

#social-nav img:hover {
    transform: rotate(360deg) scale(2);
}

/* animation filter */
#highlight img {
    filter: grayscale(100%);
    transition: 3s;
}

#highlight img:hover {
    filter: grayscale(0%);
}

/* animations : faire battre le coeur */
@keyframes heartbeat {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* Comment je veux utiliser l'animation */
.heart {
    animation-name: heartbeat;
    animation-duration: 0.5s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
}
